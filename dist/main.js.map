{"version":3,"file":"main.js","mappings":"8BACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,KCLvD,SAASC,EAAaC,GAClBC,QAAQC,IAAI,+BAAgCF,GAChC,CACR,SACA,UACA,OACA,SACA,YAGKG,SAASH,IACdI,MAAM,qBCXd,SAASC,EAAaC,GAClBA,EAAMC,iBAGN,IAAIC,EAAWC,SAASC,eAAe,QAAQZ,MAC/Ca,OAAOZ,aAAaS,GAEpBP,QAAQC,IAAI,0BAEZU,MAAM,8BAELC,MAAKC,GAAOA,EAAIC,SAChBF,MAAK,SAASC,GACXL,SAASC,eAAe,WAAWM,UAAYF,EAAIG,WCQ3D,SAASC,EAAUZ,GAEfL,QAAQC,IAAI,YAGZ,IAAIM,EAAWC,SAASC,eAAe,OAAOZ,MAE9CG,QAAQC,IAAIM,G","sources":["webpack://Client/webpack/bootstrap","webpack://Client/webpack/runtime/define property getters","webpack://Client/webpack/runtime/hasOwnProperty shorthand","webpack://Client/webpack/runtime/make namespace object","webpack://Client/./src/client/js/nameChecker.js","webpack://Client/./src/client/js/formHandler.js","webpack://Client/./src/client/js/urlChecker.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function checkForName(inputText) {\n    console.log(\"::: Running checkForName :::\", inputText);\n    let names = [\n        \"Picard\",\n        \"Janeway\",\n        \"Kirk\",\n        \"Archer\",\n        \"Georgiou\"\n    ]\n\n    if(names.includes(inputText)) {\n        alert(\"Welcome, Captain!\")\n    }\n}\nexport { checkForName }","function handleSubmit(event) {\n    event.preventDefault()\n\n    // check what text was put into the form field\n    let formText = document.getElementById('name').value\n    Client.checkForName(formText)\n\n    console.log(\"::: Form Submitted :::\")\n\n    fetch('http://localhost:3000/test')\n    //fetch()\n    .then(res => res.json())\n    .then(function(res) {\n        document.getElementById('results').innerHTML = res.message\n    })\n}\n\nexport { handleSubmit }","/*const formdata = new FormData();\nformdata.append(\"key\", \"719ca4341cfd5080fea2827cf87dd982\");\nformdata.append(\"txt\", \"YOUR TEXT HERE\");\nformdata.append(\"lang\", \"en\");  // 2-letter code, like en es fr ...\n\nconst requestOptions = {\n  method: 'POST',\n  body: formdata,\n  redirect: 'follow'\n};\n\nconst response = fetch(\"https://api.meaningcloud.com/sentiment-2.1\", requestOptions)\n  .then(response => ({\n    status: response.status, \n    body: response.json()\n  }))\n  .then(({ status, body }) => console.log(status, body))\n  .catch(error => console.log('error', error));\n\n*/\n\nfunction urlSubmit(event) {\n    //event.preventDefault()\n    console.log(\"I'm Here\");\n\n    // check what text was put into the form field\n    let formText = document.getElementById('url').value\n\n    console.log(formText)\n\n    /*const fetchLink ='http://localhost:8081/test' //\"https://api.meaningcloud.com/sentiment-2.1?\"+apiKey+\"\"\n    fetch(fetchLink)\n    .then(res => res.json())\n    .then(function(res) {\n        document.getElementById('results').innerHTML = res.message\n    })*/\n}\n\nexport { urlSubmit }"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","checkForName","inputText","console","log","includes","alert","handleSubmit","event","preventDefault","formText","document","getElementById","Client","fetch","then","res","json","innerHTML","message","urlSubmit"],"sourceRoot":""}